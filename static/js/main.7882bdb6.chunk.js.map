{"version":3,"sources":["components/AddContactForm.js","components/ContactListItem.js","components/ContactList.js","components/Filter.js","components/App.js","index.js"],"names":["ContactsForm","styled","form","InputLabel","label","FormInput","input","SubmitButton","button","AddContactForm","handleSubmit","onSubmit","htmlFor","type","name","id","autoComplete","ListItem","li","DeleteButton","ContactListItem","handleDelete","contact","number","key","onClick","List","ul","ContactList","children","FilterInput","Filter","handleChange","onChange","App","state","contacts","filter","e","target","value","setState","preventDefault","querySelector","alert","find","element","toLowerCase","prevState","uuid","reset","contactId","newContacts","this","filteredResults","indexOf","length","getFilteredContacts","map","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7882bdb6.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\"\r\nimport styled from \"styled-components\";\r\n\r\nconst ContactsForm = styled.form`\r\nborder: 2px solid black;\r\nmax-width: 400px;\r\npadding: 10px;\r\ndisplay: flex;\r\nflex-direction: column;\r\n`;\r\n\r\nconst InputLabel = styled.label`\r\nmax-width: 40%;\r\nfont-size: 20px;\r\n`;\r\n\r\nconst FormInput = styled.input`\r\nmax-width: 40%;\r\nmargin-top: 10px;\r\nmargin-bottom: 30px;\r\n`;\r\n\r\nconst SubmitButton = styled.button`\r\nmax-width: 30%;\r\nborder-radius: 5px;\r\n`;\r\n\r\nexport default function AddContactForm({handleSubmit}) {\r\n\r\n  return (\r\n    <ContactsForm onSubmit={handleSubmit}>\r\n      <InputLabel htmlFor=\"name\">Name</InputLabel>\r\n      <FormInput type=\"text\" name=\"name\" id=\"name\" autoComplete='off'/>\r\n\r\n      <InputLabel htmlFor=\"number\">Number</InputLabel>\r\n      <FormInput type=\"tel\" name=\"number\" id=\"number\" autoComplete='off'/>\r\n\r\n      <SubmitButton type=\"submit\">Add contact</SubmitButton>\r\n    </ContactsForm>\r\n  )\r\n}\r\n\r\nAddContactForm.propTypes = {\r\n  handleSubmit: PropTypes.func.isRequired\r\n};","import React from \"react\";\r\nimport PropTypes from \"prop-types\"\r\nimport styled from \"styled-components\";\r\n\r\nconst ListItem = styled.li`\r\nmargin-right: 30px;\r\nmax-width: 50%;\r\n`;\r\n\r\nconst DeleteButton = styled.button`\r\nmax-width: 50%;\r\nborder-radius: 5px;\r\n`;\r\n\r\n\r\nexport default function ContactListItem({handleDelete, contact: {id, name, number}}) {\r\n\r\n  return (\r\n    <>\r\n      <ListItem key={id}>{name}: {number} </ListItem><DeleteButton\r\n      onClick={() => handleDelete(id)}>Delete</DeleteButton>\r\n    </>\r\n  )\r\n}\r\n\r\nContactListItem.propTypes = {\r\n  handleDelete: PropTypes.func.isRequired,\r\n  contact: PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired\r\n  }).isRequired\r\n}","import React from \"react\";\r\nimport PropTypes from \"prop-types\"\r\nimport styled from \"styled-components\";\r\n\r\nconst List = styled.ul`\r\nmax-width: 400px;\r\ndisplay: flex;\r\nflex-direction: row;\r\n`;\r\n\r\n\r\nexport default function ContactList({children}) {\r\n\r\n  return (\r\n    <List>\r\n      {children}\r\n    </List>\r\n  )\r\n}\r\n\r\nContactList.propTypes = {\r\n  children: PropTypes.object.isRequired\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\"\r\nimport styled from \"styled-components\";\r\n\r\nconst FilterInput = styled.input`\r\nmax-width: 40%;\r\nmargin-top: 10px;\r\nmargin-bottom: 30px;\r\n`;\r\n\r\nexport default function Filter ({handleChange}) {\r\n\r\n    return (\r\n        <FilterInput type=\"text\" onChange={handleChange} name=\"filter\" autoComplete='off'/>\r\n    )\r\n}\r\n\r\nFilter.propTypes = {\r\n    handleChange: PropTypes.func.isRequired\r\n};","import React, {Component} from \"react\";\r\nimport {uuid} from 'uuidv4';\r\nimport AddContactForm from \"./AddContactForm\";\r\nimport ContactListItem from \"./ContactListItem\";\r\nimport ContactList from \"./ContactList\";\r\nimport Filter from \"./Filter\";\r\n\r\nexport default class App extends Component {\r\n\r\n  state = {\r\n    contacts: [],\r\n    filter: ''\r\n  };\r\n\r\n  handleChange = e => {\r\n    const {name, value} = e.target;\r\n\r\n    this.setState({[name]: value});\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const form = e.target;\r\n    const name = form.querySelector('[name=\\'name\\']').value;\r\n    const number = form.querySelector('[name=\\'number\\']').value;\r\n\r\n    const {contacts} = this.state;\r\n\r\n    if (name === \"\" || number === \"\") {\r\n      alert(\"Please fill all fields!\")\r\n    } else if (contacts.find(element => (element.name.toLowerCase() === name.toLowerCase()))) {\r\n      alert(\"This contact already added!\")\r\n    } else {\r\n      this.setState(prevState => ({\r\n        contacts: [...prevState.contacts, {id: uuid(), name: name, number: number}]\r\n      }));\r\n      this.setState({name: \"\", number: \"\"});\r\n      form.reset();\r\n    }\r\n  };\r\n\r\n  handleDelete = (contactId) => {\r\n    const {contacts} = this.state;\r\n    const newContacts = contacts.filter(contact => contact.id !== contactId);\r\n    this.setState({contacts: newContacts});\r\n  };\r\n\r\n  getFilteredContacts() {\r\n    const {contacts, filter} = this.state;\r\n    const filteredResults = contacts.filter(contact => contact.name.toLowerCase().indexOf(filter.toLowerCase()) !== -1);\r\n\r\n    if (filter === \"\") {\r\n      return contacts;\r\n    }\r\n    if (filteredResults.length) {\r\n      return filteredResults;\r\n    }\r\n    return [];\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <h2>PhoneBook</h2>\r\n        <AddContactForm handleSubmit={this.handleSubmit}/>\r\n        <h3>Contacts</h3>\r\n        <Filter handleChange={this.handleChange}/>\r\n        <ContactList>\r\n          {this.getFilteredContacts().map(contact => {\r\n            return <ContactListItem key={contact.id} contact={contact} handleDelete={this.handleDelete}/>\r\n          })}\r\n        </ContactList>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nApp.propTypes = {};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}